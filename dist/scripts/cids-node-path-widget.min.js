angular.module("de.cismet.cids.widgets.nodePathWidget",["de.cismet.cids.widgets.nodePathWidget.directives","de.cismet.cids.widgets.nodePathWidget.controllers","de.cismet.cids.rest.collidngNames.Nodes"]).controller("AppCtrl",["$scope","de.cismet.collidingNameService.Nodes",function(a,b){"use strict";a.selectedNode={},b.get({nodeId:"55.56.57.58"},function(b){a.node=b})}]),angular.module("de.cismet.cids.widgets.nodePathWidget.controllers",[]).controller("de.cismet.cids.widgets.nodePathWidget.controllers.NodePathDirectiveController",["$scope","de.cismet.collidingNameService.Nodes",function(a,b){"use strict";var c;a.selectedBreadCrumbIndex=0,a.loadWorldstate=function(b){a.selectedBreadCrumbIndex=b,a.selectedNode=a.breadCrumbPath[b]},a.isActive=function(b){return b===a.selectedBreadCrumbIndex?"active":""},a.breadCrumbPath=[],a.$watch("inputNode",function(){if(a.inputNode&&a.inputNode.key){var d=a.inputNode.key.split("."),e="";for(a.breadCrumbPath.splice(0,a.breadCrumbPath.length),c=0;c<d.length;c++)e+=d[c],a.breadCrumbPath.push(b.get({nodeId:b.utils.getRequestIdForNodeKey(e)})),e+=".";a.selectedBreadCrumbIndex=a.breadCrumbPath.length-1}else a.breadCrumbPath.splice(0,a.breadCrumbPath.length)})}]),angular.module("de.cismet.cids.widgets.nodePathWidget.directives",[]).directive("cidsNodePathWidget",function(){"use strict";return{scope:{selectedNode:"=",inputNode:"="},restrict:"E",replace:!0,templateUrl:"templates/CidsNodePathWidgetTemplate.html",controller:"de.cismet.cids.widgets.nodePathWidget.controllers.NodePathDirectiveController"}}),angular.module("de.cismet.cids.widgets.nodePathWidget.directives").run(["$templateCache",function(a){"use strict";a.put("templates/CidsNodePathWidgetTemplate.html",'<ol class="breadcrumb">\n    <li ng-repeat="item in breadCrumbPath"><a ng-click="loadWorldstate($index)" ng-class="isActive($index)">{{item.name}}</a></li>\n</ol>')}]);